{"version":3,"sources":["App.js","functions/useClick.js","functions/useObservable.js","index.js"],"names":["App","mouseClicks$","setState","useState","time","setTime","enabled","setEnabled","ref","useRef","clicks$","event","subject$","setSubject$","useEffect","current","fromEvent","useObservable","pipe","buffer","debounceTime","tap","e","console","log","map","length","filter","subscribe","unsubscribe","unsubscribe$","Subject","timer$","interval","takeUntil","val","next","complete","className","Math","floor","slice","onClick","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA4EeA,MArEf,WAAgB,ICJSC,EAAcC,EDIxB,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIPC,EAAMC,iBAAO,MACbC,EETD,SAAuBF,EAAKG,GAAQ,IAAD,EACNR,qBADM,mBAC/BS,EAD+B,KACrBC,EADqB,KAMtC,OAJAC,qBAAU,WACHN,EAAIO,SACTF,EAAYG,YAAUR,EAAIO,QAASJ,MAClC,CAACH,EAAKG,IACFC,EFGOK,CAAcT,EAAK,SCTZP,EDUdS,ECV4BR,EDUnBK,ECThBO,qBAAU,WACR,GAAKb,EAAL,CACA,IAAMW,EAAWX,EACdiB,KACCC,YAAOlB,EAAaiB,KAAKE,YAAa,OACtCC,aAAI,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MACvBG,aAAI,SAACH,GAAD,OAAOA,EAAEI,UACbC,aAAO,SAACL,GAAD,OAAa,IAANA,MAEfM,WAAU,SAACN,GAAD,OAAOpB,GAAS,MAC7B,OAAO,kBAAMU,EAASiB,kBACrB,CAAC5B,EAAcC,IDApB,IAAM4B,EAAe,IAAIC,IACnBC,EAASC,YAAS,KAAMf,KAAKgB,YAAUJ,IA4B7C,OA1BAhB,qBAAU,WAOR,OANAkB,EAAOJ,WAAU,WACXtB,GACFD,GAAQ,SAAC8B,GAAD,OAASA,EAAM,QAIpB,WACLL,EAAaM,OACbN,EAAaO,cAEd,CAAC/B,EAAS0B,EAAQF,IAgBnB,sBAAKQ,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,gCAAQ,IAAMC,KAAKC,MAAOpC,EAAO,KAAQ,KAAKqC,OAAO,KADvD,YAGE,gCAAQ,IAAMF,KAAKC,MAAOpC,EAAO,GAAM,KAAKqC,OAAO,KAHrD,YAKE,gCAAQ,IAAMF,KAAKC,MAAMpC,EAAO,KAAKqC,OAAO,QAE9C,sBAAKH,UAAU,UAAf,UACE,wBACEI,QAASpC,EApBjB,WACEC,GAAW,GACXF,EAAQ,IANV,WACEE,GAAW,IAwBL+B,UAAWhC,EAAU,OAAS,GAC9BqC,MAAOrC,EAAU,OAAS,QAH5B,SAKGA,EACC,wCAEA,2CAGJ,wBAAQE,IAAKA,EAAKmC,MAAM,OAAxB,SACE,2CAEF,wBAAQD,QA5Bd,WACErC,EAAQ,IA2BoBsC,MAAM,QAA9B,SACE,kDGjEVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b70b234f.chunk.js","sourcesContent":["import './App.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useObservable } from './functions/useObservable';\r\nimport { useClick } from './functions/useClick';\r\nimport { interval, Subject, takeUntil } from 'rxjs';\r\n\r\n\r\nfunction App() {\r\n  const [time, setTime] = useState(0);\r\n  const [enabled, setEnabled] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n  const clicks$ = useObservable(ref, 'click');\r\n  useClick(clicks$, setEnabled, enabled);\r\n\r\n  const unsubscribe$ = new Subject();\r\n  const timer$ = interval(1000).pipe(takeUntil(unsubscribe$));\r\n\r\n  useEffect(() => {\r\n    timer$.subscribe(() => {\r\n      if (enabled) {\r\n        setTime((val) => val + 1);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe$.next();\r\n      unsubscribe$.complete();\r\n    };\r\n  }, [enabled, timer$, unsubscribe$]);\r\n\r\n  function start() {\r\n    setEnabled(true);\r\n  }\r\n\r\n  function stop() {\r\n    setEnabled(false);\r\n    setTime(0);\r\n  }\r\n\r\n  function reset() {\r\n    setTime(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"table\">\r\n        <span>{('0' + Math.floor((time / 3600) % 60)).slice(-2)}</span>\r\n        &nbsp;:&nbsp;\r\n        <span>{('0' + Math.floor((time / 60) % 60)).slice(-2)}</span>\r\n        &nbsp;:&nbsp;\r\n        <span>{('0' + Math.floor(time % 60)).slice(-2)}</span>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button\r\n          onClick={enabled ? stop : start}\r\n          className={enabled ? 'stop' : ''}\r\n          title={enabled ? 'Stop' : 'Start'}\r\n        >\r\n          {enabled ? (\r\n            <span>stop</span>\r\n          ) : (\r\n            <span>start</span>\r\n          )}\r\n        </button>\r\n        <button ref={ref} title=\"Wait\">\r\n          <span>pause</span>\r\n        </button>\r\n        <button onClick={reset} title=\"Reset\">\r\n          <span>reset</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { buffer, filter, tap, map, debounceTime } from 'rxjs';\r\n\r\nexport function useClick(mouseClicks$, setState) {\r\n    useEffect(() => {\r\n      if (!mouseClicks$) return;\r\n      const subject$ = mouseClicks$\r\n        .pipe(\r\n          buffer(mouseClicks$.pipe(debounceTime(300))),\r\n          tap((e) => console.log(e)),\r\n          map((e) => e.length),\r\n          filter((e) => e === 2),\r\n        )\r\n        .subscribe((e) => setState(false));\r\n      return () => subject$.unsubscribe();\r\n    }, [mouseClicks$, setState]);\r\n  }","import { useEffect, useState } from 'react';\r\nimport {fromEvent} from 'rxjs';\r\n\r\nexport function useObservable(ref, event) {\r\n    const [subject$, setSubject$] = useState();\r\n    useEffect(() => {\r\n      if (!ref.current) return;\r\n      setSubject$(fromEvent(ref.current, event));\r\n    }, [ref, event]);\r\n    return subject$;\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}